name: python-deployment
run-name: ${{ github.actor }} - ${{ github.ref_name }}


on:
  push: 
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  PYTHON_VERSION: 3.8
  DOCKER_IMAGE_NAME: kube2py


jobs:
  python-ci:
    strategy:
      matrix:
       PythonVersion: [3.8, 3.9]
       OsType: [ubuntu-latest, windows-latest]


    name: Python CI
    runs-on: ${{ matrix.OsType }}

    defaults:
      run:
        working-directory: ./src

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Setup Python ${{ matrix.PythonVersion }}
        with:
          python-version: '${{ matrix.PythonVersion }}'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          pip install -r requirements.txt

      - name: Lint
        run: |
          cd ../
          flake8 . --show-source --statistics

      - name: Check Complexity
        run: |
          cd ../
          flake8 . --statistics --max-complexity=10 --exit-zero

      - name: Run unit test with pytest
        run: |
          pytest -v --cov=. --cov-report=json

      - name: Upload Artifacts
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: python-artifact
          path: .



      - name: Upload Helm Artifacts
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifacts
          path: ${{ github.workspace }}/helm-charts


  build-image:
    name: Build and Push Image
    needs: ['python-ci']
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest

    steps:

      - uses: actions/download-artifact@v4
        with:
          name: python-artifact
          path: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./src
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}


  helm-ci:
    runs-on: ubuntu-latest
    needs: ['python-ci']
    if: github.ref_name == 'main'
    name: Helm CI

    steps:

    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .


    - name: Setup Helm
      uses: azure/setup-helm@v4.2.0


    - name: Lint helm
      run: helm lint ./kube2py/

    - name: Template Helm
      run: helm template kube2py ./kube2py/ -f ./kube2py/values.yaml

    - name: Package Helm
      run: helm package ./kube2py

    - name: Upload Helm artifacts
      uses: actions/upload-artifact@v4
      with:
        name: helm-package
        path: ./*.tgz


  deploy_helm_dev:
    name: Deploy Helm
    uses: ./.github/workflows/deployment-workflow.yml
    needs: [helm-ci, build-image]
    secrets: inherit
    with:
      environment: development
      version: ${{ github.sha }}

  deploy_helm_staging:
    name: Deploy Helm
    uses: ./.github/workflows/deployment-workflow.yml
    needs: deploy_helm_dev
    secrets: inherit
    with:
      environment: staging
      version: ${{ github.sha }}
      helm-values-path: ./kube2py/values/staging.yaml
      helm-release-name: kube2py-staging


